import {
  CodeBracketIcon,
  Cog8ToothIcon,
  DocumentDuplicateIcon,
  MagnifyingGlassIcon,
  PlayIcon,
  SquaresPlusIcon,
  UserCircleIcon,
  XMarkIcon,
} from '@heroicons/react/24/outline/';
import { type NextPage } from 'next';
import Head from 'next/head';
import React, { type MouseEvent, useState } from 'react';
import { LeftMenuBar } from '../components';
import { useDocumentsStore } from '../stores';
import { clg, findParents, getCodeContent, searchByKey } from '../utils';

// TODO: add syntax highlighter

const Home: NextPage = () => {
  const documents = useDocumentsStore((state) => state.documents);
  // Active tabs
  const activeTabs = useDocumentsStore((state) => state.activeTabs);
  const removeActiveTab = useDocumentsStore((state) => state.removeActiveTab);
  // Active file
  const activeFile = useDocumentsStore((state) => state.activeFile);
  const setActiveFile = useDocumentsStore((state) => state.setActiveFile);

  const handleTabClose = (e: MouseEvent<HTMLButtonElement>, key: number) => {
    e.stopPropagation();
    if (activeFile === key) {
      const index = activeTabs.findIndex((tab) => tab === key);
      const newActiveFile = activeTabs[index + 1] || activeTabs[index - 1];
      if (newActiveFile) setActiveFile(newActiveFile);
      else setActiveFile(-1);
    }
    // Remove the tab from the activeTabs list
    removeActiveTab(key);
  };

  // TODO: run like code
  const handleRunCode = () => {
    // Get active parent
    const parents = findParents(activeFile, documents);
    const activeTopParent = parents[parents.length - 1];

    console.log(activeTopParent);
  };

  //   const [content, setContent] = useState(
  //     `import React, { type FunctionComponent } from 'react';
  // import Skills from './skills';

  // const skills = [
  //   'TypeScript',
  //   'JavaScript',
  //   'React',
  //   'Next.js',
  //   'CSS',
  //   'TailwindCSS',
  //   'Sass',
  // ];

  // const App: FunctionComponent = () => {
  //   return <Skills skills={skills} />;
  // };

  // export default App;`
  //   );

  // console.log(refractor.highlight(content, 'tsx'));

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]"> */}
      <main className="relative min-h-screen overflow-hidden bg-slate-900 p-16">
        {/* Window */}
        <div className="relative flex min-h-[900px] rounded-2xl bg-gradient-to-br from-slate-400/40 to-slate-400/0 p-4 ">
          {/* Icon Indicator Line */}
          <div className="absolute top-[40px] -left-4 h-[1px] w-8 rotate-90 bg-cyan-300 blur-[1px]" />
          {/* Left Icon Bar */}
          <div className="flex flex-col justify-between gap-8 p-2">
            {/* Body */}
            <div className="flex flex-col gap-8">
              <DocumentDuplicateIcon className="h-8 w-8 cursor-pointer text-slate-100" />
              <MagnifyingGlassIcon className="h-8 w-8 cursor-pointer text-slate-400" />
              <SquaresPlusIcon className="h-8 w-8 cursor-pointer text-slate-400" />
              <PlayIcon className="h-8 w-8 cursor-pointer text-slate-400" onClick={handleRunCode} />
            </div>
            {/* Bottom */}
            <div className="flex flex-col gap-4">
              <UserCircleIcon className="h-8 w-8 text-slate-400" />
              <Cog8ToothIcon className="h-8 w-8 text-slate-400" />
            </div>
          </div>
          {/* Left Menu Bar */}
          <LeftMenuBar />
          {/* BODY */}
          <div className="flex flex-col gap-4 p-2">
            {/* TABS */}
            <div className="flex gap-4" role="tablist">
              {activeTabs.map((key) => (
                <div
                  key={key}
                  className={clg(
                    'group relative rounded bg-gradient-to-br from-slate-700/40 to-slate-700/0  backdrop-blur-sm',
                    {
                      'border-b border-cyan-300': activeFile === key,
                    },
                    {
                      'border-b border-transparent': activeFile !== key,
                    }
                  )}
                >
                  <button
                    className="flex items-center gap-2 p-2 pr-9"
                    type="button"
                    onClick={() => setActiveFile(key)}
                  >
                    <CodeBracketIcon className="h-6 w-6 text-slate-100" />
                    <span className="font-consolas text-base font-normal italic text-slate-100">
                      {searchByKey(key, documents)?.title}
                    </span>
                  </button>
                  <button
                    className="invisible absolute right-2 top-1/2 -translate-y-1/2 rounded p-[2px] text-slate-100 opacity-0 hover:bg-gradient-to-br hover:from-red-700/60 hover:to-red-700/20 group-hover:visible group-hover:opacity-100"
                    onClick={(e) => handleTabClose(e, key)}
                    type="button"
                  >
                    <XMarkIcon className="h-4 w-4" />
                  </button>
                </div>
              ))}
            </div>
            {/* EDITOR */}
            <div className="flex py-4">
              <pre>
                <code className="language-tsx">
                  {getCodeContent(searchByKey(activeFile, documents).content ?? 'EMPTY')}
                </code>
              </pre>
            </div>
          </div>
        </div>
        {/* Circles */}
        <div className="absolute left-[1066px] top-[315px] h-[100px] w-[100px] rounded-full bg-cyan-300 mix-blend-screen blur-3xl" />
        <div className="absolute left-[395px] top-[741px] h-[100px] w-[100px] rounded-full bg-cyan-300 mix-blend-screen blur-3xl" />
      </main>
    </>
  );
};

export default Home;
// TODO: remove when complete https://codesandbox.io/s/hungry-pine-k7g0y9?file=/src/document.js:166-187
